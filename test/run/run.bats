#!/usr/bin/env bats

setup() {
    load ../import_showtime.bash
}

@test "./show" {
    run ./show
    _=$(( status == 1 ))
    [[ "${lines[0]}" = "Usage"* ]]
}

@test "./show --help" {
    run ./show --help
    _=$(( status == 1 ))
    [[ "${lines[0]}" = "Usage"* ]]
}

@test "./show --clean only" {
    run ./show --clean
    _=$(( status == 1 ))
    [[ "${lines[0]}" = *"Please"* ]]
}

@test "./show --clean --offline" {
    run ./show --clean --offline
    _=$(( status == 1 ))
    [[ "${lines[0]}" = "ERR: CLEAN and OFFLINE can't be set together"* ]]
}

@test "./show --clean not found" {
    run ./show --clean test/run/demo
    _=$(( status == 1 ))
    [[ "${lines[0]}" = "WRN: Clean script"* ]]
}

@test "./show --offline not found" {
    run ./show --offline test/run/demo
    _=$(( status == 1 ))
    [[ "${lines[0]}" = "WRN: Offline script"* ]]
}

@test "./show full" {
    run ./show test/run/full
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *"demo"* ]]
}

@test "./show --clean foo" {
    run ./show --clean test/run/full
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *"clean"* ]]
}

@test "./show --offline foo" {
    run ./show --offline test/run/full
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *"offline"* ]]
}

@test "./show theme" {
    run ./show test/run/theme
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *">"*"demo"* ]]
}

@test "./show --export sh" {
    run ./show --export sh test/run/full
    _=$(( status == 0 ))
    [[ "${lines[0]}" = "#!/bin/bash" ]]
    [[ "${lines[1]}" = "# Generated by showtime" ]]
    [[ "${lines[2]}" = "# demo" ]]
    [[ "${lines[3]}" = "echo \"test\"" ]]
}

@test "./show --export md" {
    run ./show --export md test/run/full
    _=$(( status == 0 ))
    [[ "${lines[0]}" = "demo" ]]
    [[ "${lines[1]}" = "\`\`\`bash" ]]
    [[ "${lines[2]}" = "echo \"test\"" ]]
    [[ "${lines[3]}" = "\`\`\`" ]]
}

@test "./show --export md --clean" {
    run ./show --export md --clean test/run/full
    _=$(( status == 0 ))
    [[ "${lines[0]}" = "clean" ]]
}

@test "./show --export md --offline" {
    run ./show --export md --offline test/run/full
    _=$(( status == 0 ))
    [[ "${lines[0]}" = "offline" ]]
}

# Test how b behaves with --dryrun, --quiet, -y
@test "./show --dryrun bash" {
    run ./show --dryrun test/run/bash
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *"bash"* ]]
}

@test "./show --quiet bash" {
    run ./show --quiet test/run/bash
    _=$(( status == 0 ))
    [[ "${lines[0]}" = "" ]]
}

@test "./show -y bash" {
    run ./show -y test/run/bash
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *"bash"* ]]
}

# Test how w behaves with --dryrun, --quiet, -y
@test "./show --dryrun wait_timeout" {
    run ./show --dryrun test/run/wait_timeout
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *"wait_timeout"* ]]
}

@test "./show --quiet wait_timeout" {
    run ./show --quiet test/run/wait_timeout
    _=$(( status == 0 ))
    [[ "${lines[0]}" = "" ]]
}

@test "./show -y wait" {
    run ./show -y test/run/wait
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *"wait"* ]]
    [[ "${lines[1]}" = *"done"* ]]
}

@test "./show -y --quiet wait" {
    run ./show -y --quiet test/run/wait
    _=$(( status == 0 ))
    [[ "${lines[0]}" = "" ]]
}

@test "./show -y wait_timeout" {
    run ./show -y test/run/wait_timeout
    _=$(( status == 0 ))
    [[ "${lines[0]}" = *"wait_timeout"* ]]
    [[ "${lines[1]}" = *"done"* ]]
}

@test "./show -y --quiet wait_timeout" {
    run ./show -y --quiet test/run/wait_timeout
    _=$(( status == 0 ))
    [[ "${lines[0]}" = "" ]]
}
